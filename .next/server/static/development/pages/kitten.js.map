{"version":3,"file":"static/development/pages/kitten.js","sources":["webpack:///webpack/bootstrap","webpack:///./components/KittenItem.js","webpack:///./components/PageHead.js","webpack:///./lib/reduxApi.js","webpack:///./pages/kitten.js","webpack:///external \"@babel/runtime/regenerator\"","webpack:///external \"isomorphic-fetch\"","webpack:///external \"lodash\"","webpack:///external \"next-redux-wrapper\"","webpack:///external \"next/head\"","webpack:///external \"prop-types\"","webpack:///external \"react\"","webpack:///external \"react-redux\"","webpack:///external \"redux\"","webpack:///external \"redux-api\"","webpack:///external \"redux-api/lib/adapters/fetch\"","webpack:///external \"redux-thunk\"","webpack:///external \"styled-jsx/style\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","const KittenItem = ({kitten, index, inProgress, handleUpdate, handleDelete}) => (\n\t<div className={inProgress === kitten._id ? 'inProgress' : ''}>\n\t\t{kitten.name} \n\t\t<a className=\"update\" onClick={handleUpdate.bind(this, index, kitten._id)}>Update</a>\n\t\t<a className=\"delete\" onClick={handleDelete.bind(this, index, kitten._id)}>Delete</a>\n\t\t<style>{`\n\t\t\ta {\n\t\t\t\tmargin-left: 0.5em;\n\t\t\t\tcursor: pointer;\n\t\t\t\tfont-size: 0.6em;\n\t\t\t\ttext-transform: uppercase;\n\t\t\t}\n\t\t\ta.update {\n\t\t\t\tcolor: lime;\n\t\t\t}\n\t\t\ta.delete {\n\t\t\t\tcolor: tomato;\n\t\t\t}\n\t\t\t.inProgress {\n\t\t\t\topacity: 0.3;\n\t\t\t}\n\t\t`}</style>\n\t</div>\n);\nexport default KittenItem;","import Head from 'next/head'\n\nconst PageHead = ({title, description}) => (\n\t<Head>\n\t\t<title>{title}</title>\n\t\t<meta name='description' content={description}/>\n\t\t<meta charSet='utf-8'/>\n\t\t<meta httpEquiv='content-language' content='en'/>\n\t\t<meta name='viewport' content='initial-scale=1.0, width=device-width'/>\n\t\t<link rel='stylesheet' href='/static/app.css'/>\n\t</Head>\n);\nexport default PageHead;\n","import _ from 'lodash';\nimport 'isomorphic-fetch';\nimport reduxApi, { transformers } from 'redux-api';\nimport adapterFetch from 'redux-api/lib/adapters/fetch';\nimport { Provider, connect } from 'react-redux';\n\n\nconst PORT = process.env.PORT || 3005\nconst API_URL = process.env.NODE_ENV === 'production' ? 'https://nextjs-express-mongoose.herokuapp.com' : `http://localhost:${PORT}`;\n\nconst jsonOptions = {\n\theaders: {\n\t\t'Content-Type': 'application/json'\n\t}\n};\n\nconst apiTransformer = function (data, prevData, action) {\n\tconst actionMethod = _.get(action, 'request.params.method');\n\tswitch (actionMethod) {\n\t\tcase 'POST':\n\t\t\treturn [...prevData, data];\n\t\tcase 'PUT':\n\t\t\treturn prevData.map(oldData => oldData._id === data._id ? data : oldData);\n\t\tcase 'DELETE':\n\t\t\treturn _(prevData).filter(oldData => oldData._id === data._id ? undefined : oldData).compact().value();\n\t\tdefault:\n\t\t\treturn transformers.array.call(this, data, prevData, action);\n\t}\n};\n\n// redux-api documentation: https://github.com/lexich/redux-api/blob/master/docs/DOCS.md\nexport default reduxApi({\n\n\t// Simple endpoint description\n\t//oneKitten: '/api/kittens/:id',\n\n\t// Complex endpoint description\n\tkittens: {\n\t\turl: '/api/kittens/:id',\n\t\tcrud: true, // Make CRUD actions: https://github.com/lexich/redux-api/blob/master/docs/DOCS.md#crud\n\n\t\t// base endpoint options `fetch(url, options)`\n\t\toptions: jsonOptions,\n\n\t\t// reducer (state, action) {\n\t\t// \tconsole.log('reducer', action);\n\t\t// \treturn state;\n\t\t// },\n\n\t\t// postfetch: [\n\t\t// \tfunction ({data, actions, dispatch, getState, request}) {\n\t\t// \t\tconsole.log('postfetch', {data, actions, dispatch, getState, request});\n\t\t// \t\tdispatch(actions.kittens.sync());\n\t\t// \t}\n\t\t// ],\n\n\t\t// Reimplement default `transformers.object`\n\t\t//transformer: transformers.array,\n\t\ttransformer: apiTransformer,\n\n\t}\n\n})\n.use('fetch', adapterFetch(fetch))\n.use('rootUrl', API_URL);\n","import {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nimport {createStore, applyMiddleware, combineReducers} from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport withRedux from 'next-redux-wrapper';\nimport reduxApi from '../lib/reduxApi';\n\nimport PageHead from '../components/PageHead';\nimport KittenItem from '../components/KittenItem';\n\nclass IndexPage extends Component {\n\n    static propTypes = {\n\n        // oneKitten: PropTypes.shape({\n        // \tloading: PropTypes.bool.isRequired,\n        // \tdata: PropTypes.shape({\n        // \t\ttext: PropTypes.string\n        // \t}).isRequired\n        // }).isRequired,\n\n        kittens: PropTypes.shape({\n            loading: PropTypes.bool.isRequired,\n            data: PropTypes.array.isRequired\n        }).isRequired,\n\n        dispatch: PropTypes.func.isRequired\n\n    };\n\n    static async getInitialProps({store, isServer, pathname, query}) {\n        // Get all kittens\n        const kittens = await store.dispatch(reduxApi.actions.kittens.sync());\n        return {kittens};\n    }\n\n    constructor(props) {\n        super(props)\n        this.state = {name: ''}\n    }\n\n    handleChangeInputText(event) {\n        this.setState({name: event.target.value});\n    }\n\n    handleAdd(event) {\n        // Progress indicator\n        this.setState({inProgress: true});\n        const callbackWhenDone = () => this.setState({name: '', inProgress: null});\n\n        // Actual data request\n        const newKitten = {\n            name: this.state.name,\n        };\n        this.props.dispatch(reduxApi.actions.kittens.post({}, {body: JSON.stringify(newKitten)}, callbackWhenDone));\n    }\n\n    handleUpdate(index, kittenId, event) {\n        // Progress indicator\n        this.setState({inProgress: kittenId});\n        const callbackWhenDone = () => this.setState({inProgress: null});\n\n        // Actual data request\n        const newKitten = {\n            name: prompt('New name?'),\n        };\n        this.props.dispatch(reduxApi.actions.kittens.put({id: kittenId}, {body: JSON.stringify(newKitten)}, callbackWhenDone));\n    }\n\n    handleDelete(index, kittenId, event) {\n        // Progress indicator\n        this.setState({inProgress: kittenId});\n        const callbackWhenDone = () => this.setState({inProgress: null});\n\n        // Actual data request\n        this.props.dispatch(reduxApi.actions.kittens.delete({id: kittenId}, callbackWhenDone));\n    }\n\n    render() {\n\n        const {kittens} = this.props;//dd\n\n        const kittenList = kittens.data\n            ? kittens.data.map((kitten, index) => <KittenItem\n                key={index}\n                kitten={kitten}\n                index={index}\n                inProgress={this.state.inProgress}\n                handleUpdate={this.handleUpdate.bind(this)}\n                handleDelete={this.handleDelete.bind(this)}\n            />)\n            : [];\n\n        return <div>\n            <PageHead\n                title='Next.js (React) + Express REST API + MongoDB + Mongoose-Crudify boilerplate'\n                description='Demo of nextjs-express-mongoose-crudify-boilerplate'\n            />\n\n            <h1>Kittens</h1>\n\n            {kittenList}\n            <div>\n                <input placeholder='Enter a kitten name' value={this.state.name}\n                       onChange={this.handleChangeInputText.bind(this)} disabled={this.state.inProgress}/>\n                <button onClick={this.handleAdd.bind(this)} disabled={this.state.inProgress}>Add kitten</button>\n                <style jsx>{`\n\t\t\t\t\tdiv {\n\t\t\t\t\t\tmargin-top: 1em;\n\t\t\t\t\t}\n\t\t\t\t`}</style>\n            </div>\n\n        </div>\n    };\n\n}\n\nconst createStoreWithThunkMiddleware = applyMiddleware(thunkMiddleware)(createStore);\nconst makeStore = (reduxState, enhancer) => createStoreWithThunkMiddleware(combineReducers(reduxApi.reducers), reduxState);\nconst mapStateToProps = (reduxState) => ({kittens: reduxState.kittens}); // Use reduxApi endpoint names here\n\nconst IndexPageConnected = withRedux({createStore: makeStore, mapStateToProps})(IndexPage)\nexport default IndexPageConnected;\n","module.exports = require(\"@babel/runtime/regenerator\");","module.exports = require(\"isomorphic-fetch\");","module.exports = require(\"lodash\");","module.exports = require(\"next-redux-wrapper\");","module.exports = require(\"next/head\");","module.exports = require(\"prop-types\");","module.exports = require(\"react\");","module.exports = require(\"react-redux\");","module.exports = require(\"redux\");","module.exports = require(\"redux-api\");","module.exports = require(\"redux-api/lib/adapters/fetch\");","module.exports = require(\"redux-thunk\");","module.exports = require(\"styled-jsx/style\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACxFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAJA;AACA;AAuBA;;;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;;;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAPA;AACA;AASA;;;;;;;;;;;;;;;;;;;;ACZA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;;;;;;;;;;;AAEA;AACA;AAEA;AACA;AACA;AADA;AADA;AACA;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AARA;AAUA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AArBA;AANA;AACA;;;;;;;;;;;;;;;;;;;;;;AChCA;AACA;;;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;;;;;;;;;;;;;;;AAoBA;;AAEA;AACA;;AADA;AACA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAAA;AAAA;AAFA;AAGA;AACA;;;AACA;AACA;AAAA;AAAA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AADA;AAGA;AAAA;AAAA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;;;AAEA;AAAA;AACA;AADA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAUA;AAEA;AACA;AAFA;AAQA;AAAA;AACA;AAAA;AACA;AAAA;AADA;AAAA;AAEA;AAAA;AAAA;AAAA;AAHA;AAAA;AAYA;;;;AAxGA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAKA;AAdA;AACA;AAyGA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;AC5HA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}